name: UI Executor CI

on:
  push:
    paths:
      - 'src/**'
      - 'requirements.txt'
      - '.github/workflows/ui-executor.yml'
  workflow_dispatch:

jobs:
  run-ui-executor:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_MODEL: gpt-4o-mini
      PLAYWRIGHT_MCP_SSE_URL: http://localhost:8931/sse
      UI_STEPS: |
        [
          {"action":"goto","url":"https://example.com"},
          {"action":"wait_for","state":"networkidle"},
          {"action":"screenshot","path":"ui-executor-screenshot.png"}
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Playwright browsers and Linux deps
        run: |
          npx playwright install-deps
          npx playwright install chrome

      - name: Start Playwright MCP server
        run: |
          nohup npx @playwright/mcp@latest --port 8931 > mcp.log 2>&1 &
          echo $! > mcp.pid

      - name: Wait for MCP server to be ready
        run: |
          for i in {1..60}; do
            if curl -sSf http://localhost:8931/sse > /dev/null; then
              echo "MCP server is up"
              exit 0
            fi
            echo "Waiting for MCP server... ($i)"
            sleep 1
          done
          echo "MCP server did not start in time" >&2
          echo "----- MCP logs (last 200 lines) -----"
          tail -n 200 mcp.log || true
          exit 1

      - name: Run UI Executor
        env:
          PYTHONUNBUFFERED: '1'
        run: |
          python src/main.py

      - name: Show MCP logs
        if: always()
        run: |
          echo "----- MCP logs (last 200 lines) -----"
          tail -n 200 mcp.log || true

      - name: Upload artifacts (screenshot and logs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-executor-artifacts
          path: |
            ui-executor-screenshot.png
            mcp.log
          if-no-files-found: warn
